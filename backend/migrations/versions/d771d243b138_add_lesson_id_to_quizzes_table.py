"""Add lesson_id to quizzes table

Revision ID: d771d243b138
Revises: 9f348102092e
Create Date: 2025-09-04 16:10:16.014999

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd771d243b138'
down_revision = '9f348102092e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.alter_column('recurrence_days',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('exception_dates',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_availability_day_time'))
        batch_op.drop_index(batch_op.f('idx_availability_recurring'))
        batch_op.drop_index(batch_op.f('idx_availability_tutor_date'))
        batch_op.create_foreign_key(None, 'availability', ['parent_availability_id'], ['id'])

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.alter_column('invoice_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('subtotal',
               existing_type=sa.FLOAT(),
               nullable=False,
               existing_server_default=sa.text('(0.0)'))
        batch_op.alter_column('line_items',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['invoice_number'])
        batch_op.create_foreign_key(None, 'payments', ['payment_id'], ['id'])

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'users', ['guardian_id'], ['id'])

    with op.batch_alter_table('quizzes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lesson_id', sa.String(length=50), nullable=True))
        batch_op.create_foreign_key(None, 'lessons', ['lesson_id'], ['id'])

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.alter_column('session_rating',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=True)

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("('setting_' || substr(hex(randomblob(8)), 1, 8))"))
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_unique_constraint(None, ['setting_key'])
        batch_op.create_foreign_key(None, 'users', ['updated_by'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('temp_password_expires_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'users', ['temp_password_created_by'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('temp_password_expires_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("('setting_' || substr(hex(randomblob(8)), 1, 8))"))

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.alter_column('session_rating',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=True)

    with op.batch_alter_table('quizzes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('lesson_id')

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('line_items',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('subtotal',
               existing_type=sa.FLOAT(),
               nullable=True,
               existing_server_default=sa.text('(0.0)'))
        batch_op.alter_column('invoice_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index(batch_op.f('idx_availability_tutor_date'), ['tutor_id', 'specific_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_availability_recurring'), ['is_recurring', 'parent_availability_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_availability_day_time'), ['day_of_week', 'start_time', 'end_time'], unique=False)
        batch_op.alter_column('exception_dates',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('recurrence_days',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)

    # ### end Alembic commands ###
